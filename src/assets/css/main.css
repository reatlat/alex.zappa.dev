/* Base */
@import 'tailwindcss';

@plugin '@tailwindcss/aspect-ratio';
@plugin 'tailwindcss-safe-area';

@custom-variant dark (&:is(.dark *));

@theme {
    --radius: 0.375rem;

    --aspect-auto: auto;
    --aspect-box: 1;
    --aspect-landscape: 4/3;
    --aspect-portrait: 3/4;
    --aspect-video: 16/9;

    --height-unset: unset;

    --container-copy-xs: 25ch;
    --container-copy-sm: 45ch;
    --container-copy-md: 55ch;
    --container-copy-lg: 65ch;
    --container-copy-xl: 75ch;
    --container-copy-2xl: 85ch;

    --color-transparent: transparent;
    --color-current: currentColor;
    --color-inherit: inherit;
    --color-cursor: #ffffff;
    --color-terminal: #111111;

    --color-aspect-ratio-auto: auto;
    --color-aspect-ratio-box: 1;
    --color-aspect-ratio-landscape: 4/3;
    --color-aspect-ratio-portrait: 3/4;
    --color-aspect-ratio-video: 16/9;

    --color-height-unset: unset;

    --color-max-width-copy-xs: 25ch;
    --color-max-width-copy-sm: 45ch;
    --color-max-width-copy-md: 55ch;
    --color-max-width-copy-lg: 65ch;
    --color-max-width-copy-xl: 75ch;
    --color-max-width-copy-2xl: 85ch;


    --tw-prose-links: #06c;
    --tw-prose-quote-borders: #06c;
    --tw-prose-headings: #222;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }

    html {
        @apply ring-zinc-700;
    }

    /* Set core root defaults */
    html:focus-within {
        scroll-behavior: smooth;
    }

    /* Set core body defaults */
    body {
        min-height: 100vh;
        text-rendering: optimizeSpeed;
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    /* Add the correct font weight in Chrome, Edge, and Safari */
    b,
    strong {
        font-weight: bolder;
    }

    /* Prevent `sub` and `sup` elements from affecting the line height in all browsers */
    sub,
    sup {
        position: relative;
        font-size: 0.75em;
        line-height: 0;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }

    svg,
    img,
    picture {
        pointer-events: none;
    }

    img,
    video,
    picture {
        max-width: 100%;
        height: auto;
    }

    /* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
    ul:where([role="list"]),
    ol:where([role="list"]) {
        list-style: none;
    }

    /* Inherit fonts for inputs and buttons */
    input,
    button,
    textarea,
    select {
        font: inherit;
    }

    /* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
    @media (prefers-reduced-motion: reduce) {
        html:focus-within {
            scroll-behavior: auto;
        }

        *,
        *::before,
        *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }
    }

    [x-cloak] {
        display: none !important;
    }

}

/* 3rd party styles */
@import 'prism-themes/themes/prism-atom-dark.css' layer(components);

@layer components {


    .container {
        @apply mx-auto max-w-5xl!;
    }

    .prose {
        @apply mx-auto max-w-3xl;
    }

    .btn {
        @apply no-underline;
    }

    .prose {
        @apply text-base md:text-lg;
    }

    .prose :where(a):not(:where([class~="not-prose"] *)) {
        text-decoration: none;
        @apply hover:underline;
    }

    .prose :where(pre):not(:where([class~="not-prose"] *)) {
        --tw-prose-pre-bg: #1a1a1a;
    }

    code,
    code[class*="language-"],
    pre[class*="language-"] {
        font-family: monospace;
        font-weight: 400;
        line-height: 1.3;
        @apply text-base;
    }

    code:where(:not([class])) {
        @apply rounded! font-normal! text-current! bg-zinc-500! dark:bg-zinc-700! px-2 py-1;
    }

    :not(pre) > code[class*="language-"],
    pre[class*="language-"] {
        @apply -mx-4 w-screen rounded-none sm:mx-0 sm:w-full sm:rounded;
    }

    code:where(:not([class]))::before,
    code:where(:not([class]))::after {
        @apply content-none!;
    }

    .token.property,
    .token.tag,
    .token.constant,
    .token.symbol,
    .token.deleted {
        font-style: italic;
    }

    :not(pre) > code[class*="language-"],
    pre[class*="language-"] {
        @apply bg-zinc-700 drop-shadow-lg dark:drop-shadow-none;
    }

    blockquote > pre[class*="language-"] {
        @apply w-[calc(100%+1rem)] sm:w-full mr-0;
    }

    .prose p {
        @apply text-pretty;
    }

    .prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before,
    .prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
        @apply hidden;
    }

    [data-theme="dark"] .prose {
        --tw-prose-links: #fbbf24;
        --tw-prose-quote-borders: #fbbf24;
        --tw-prose-quotes: #f2f2f2;
        --tw-prose-body: #f2f2f2;
        --tw-prose-headings: #f2f2f2;
        --tw-prose-bold: #f2f2f2;
    }

    .header-anchor {
        display: inline-block;
        font-weight: 300 !important;
        text-decoration: none !important;
        transform: scale(0.85);
    }

    .cp_embed_wrapper {
        @apply overflow-hidden;
        @apply -mx-4 w-screen rounded-none sm:mx-0 sm:w-full sm:rounded;
        @apply drop-shadow-lg dark:drop-shadow-none;
    }

    /* YouTube */
    lite-youtube {
        @apply w-full max-w-3xl mx-auto aspect-video align-middle h-unset;
        @apply bg-terminal relative block contain-content bg-center bg-cover cursor-pointer;

        /* responsive iframe with a 16:9 aspect ratio, thanks https://css-tricks.com/responsive-iframes/ */
        &:after {
            content: "";
            display: block;
            padding-bottom: calc(100% / (16 / 9));
        }

        & > iframe {
            @apply absolute top-0 left-0 w-full h-full border-none;
        }

        & > .lty-playbtn {
            @apply size-14 sm:size-18 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 bg-transparent;
            @apply bg-no-repeat bg-center bg-contain;
            @apply cursor-pointer grayscale-100 transition-all duration-100 ease-in;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 68 48"><path fill="%23f00" fill-opacity="0.8" d="M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z"></path><path d="M 45,24 27,14 27,34" fill="%23fff"></path></svg>');
        }

        &:hover > .lty-playbtn,
        & .lty-playbtn:focus {
            filter: none;
        }

        &.lyt-activated {
            cursor: unset;
        }

        &.lyt-activated::before,
        &.lyt-activated > .lty-playbtn {
            opacity: 0;
            pointer-events: none;
        }

        .lyt-visually-hidden {
           @apply sr-only;
        }
    }
}
